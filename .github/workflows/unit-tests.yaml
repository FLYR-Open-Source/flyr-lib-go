name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Cache gotestsum"
        id: cache-gotestsum
        uses: actions/cache@v4
        with:
          path: ~/go/bin/gotestsum
          key:  ${{ runner.os }}-gotestsum-${{ steps.get-date.outputs.date }}
          restore-keys: ${{ runner.os }}-gotestsum

      - name: "Install gotestsum"
        if: steps.cache-gotestsum.outputs.cache-hit != 'true'
        run: |
          go install gotest.tools/gotestsum@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: "[Branch: HEAD] Checking out"
        # Now that we have created the coverage map for the base, we jump to
        # PR's branch and do the same thing (get test coverage)
        uses: actions/checkout@v4
        with:
          clean: yes

      - name: "Setup Golang"
        uses: actions/setup-go@v5
        with:
          go-version-file: './go.mod'
          cache-dependency-path: '/go.sum'
          check-latest: false
          cache: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: "[Branch: HEAD] Generate source hash from source files"
        id: hash-head
        run: echo "value=${{ hashFiles('**/*.go') }}" >>"$GITHUB_OUTPUT"

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.0.0 # See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
        with:
          args: >
            -Dsonar.verbose=true
            -Dsonar.go.coverage.reportPaths=${{ steps.hash-head.outputs.value }}.cover
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
