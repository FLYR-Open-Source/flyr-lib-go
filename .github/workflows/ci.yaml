name: CI

on:
  pull_request:
    branches:
      - main
      - release/**
  push:
    branches:
      - main
      - release/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Go Mod Download
      run: go mod download
    - name: golangci-lint
      uses: golangci/golangci-lint-action@55c2c1448f86e01eaae002a5a3a9624417608d84 # v6
      with:
        version: v1.64.4
        args: "--timeout 5m --enable gofmt,testifylint,misspell -v"

  check-license:
    name: Check License
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Go Mod Download
      run: go mod download
    - name: Install addlicense
      run: go install github.com/google/addlicense@latest
    - name: Check license headers
      run: |
        addlicense -check -l mit -f ./LICENSE -c "FLYR, Inc" $(find . -type f -name "*.go")

  go-sec:
    name: GoSec
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Go Mod Download
      run: go mod download
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-no-fail -fmt sarif -out gosec-results.sarif ./...'
    - name: Upload GoSec scan to GitHub Security
      uses: github/codeql-action/upload-sarif@5f8171a638ada777af81d42b55959a643bb29017 # v3
      with:
        sarif_file: gosec-results.sarif
    - name: Upload Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      id: upload-artifact
      with:
        name: sonar-reports-gosec
        path: gosec-results.sarif

  trivy:
    name: Trivy Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Run Trivy vulnerability scanner filesystem
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: fs
        scan-ref: '.'
        hide-progress: false
        format: "sarif"
        output: "trivy-results-fs.sarif"
    - name: Upload Trivy scan to GitHub Security
      uses: github/codeql-action/upload-sarif@5f8171a638ada777af81d42b55959a643bb29017 # v3
      with:
        sarif_file: trivy-results-fs.sarif
    - name: Upload Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      id: upload-artifact
      with:
        name: sonar-reports-trivy-fs
        path: trivy-results-fs.sarif

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Setup Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
      with:
        go-version-file: go.mod
        cache-dependency-path: go.sum
    - name: Go Mod Download
      run: go mod download
    - name: Run Unit Tests
      continue-on-error: true
      env:
        SPANNER_EMULATOR_HOST: localhost:9010
        PUBSUB_EMULATOR_HOST: localhost:8681
      run: |
        go run gotest.tools/gotestsum@latest --junitfile report.xml --jsonfile test-results.json -- -coverprofile coverage.out ./...
    - name: Convert Unit Tests
      continue-on-error: true
      run: |
        go run github.com/ctrf-io/go-ctrf-json-reporter/cmd/go-ctrf-json-reporter@latest -output ctrf-report.json < test-results.json
    - name: Upload Test Results Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      id: upload-test-results
      with:
        name: sonar-reports-test-results
        path: |
          test-results.json
          report.xml
    - name: Upload Coverage Artifact
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      id: upload-coverage
      with:
        name: sonar-reports-coverage
        path: coverage.out
    - name: Publish Test Report
      uses: ctrf-io/github-test-reporter@d1e394283c0ca33d34c9b6d8983aaef6945b52ec # v1
      with:
        report-path: ctrf-report.json
        group-by: suite
        summary-report: true
        failed-report: true
        flaky-report: true
        skipped-report: true
        suite-folded-report: true
        exit-on-fail: true

  sonar-cloud:
    name: Run SonarCloud Code Analysis
    runs-on: ubuntu-latest
    needs: [unit-tests, trivy, go-sec]
    if:  ${{ github.actor != 'dependabot[bot]' }} && (success() || failure())
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0
    - name: Download Artifacts
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
      with:
        pattern: sonar-reports-*
        merge-multiple: true
        path: sonar-reports
    - name: Get Version
      id: version
      run: echo "version=$(git describe --tags --abbrev=0)" >> "$GITHUB_OUTPUT"
    - name: Get Reports
      id: get-reports
      run: |
        SARIF_FILES=""
        for file in $(find sonar-reports -name '*.sarif'); do
          if [ -z "$SARIF_FILES" ]; then
            SARIF_FILES="$file"
          else
            SARIF_FILES="$SARIF_FILES,$file"
          fi
        done
        echo "sarif_files=$SARIF_FILES" >> "$GITHUB_OUTPUT"
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d # v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.go.coverage.reportPaths=sonar-reports/coverage.out
          -Dsonar.go.tests.reportPaths=sonar-reports/unit-test-results.json
          -Dsonar.sarifReportPaths=${{ steps.get-reports.outputs.sarif_files }}
          -Dsonar.projectVersion=${{ steps.version.outputs.version }}
