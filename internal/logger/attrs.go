package logger

import (
	"log/slog"
	"time"

	"github.com/FlyrInc/flyr-lib-go/config"
)

// InjectRootAttrs adds root attributes to a slog handler.
//
// This function enhances the given slog.Handler with a set of attributes
// that are common across the application, such as environment, version,
// service name, and tenant. These attributes are typically added once at
// the root level and included in all logs generated by the handler.
// InjectRootAttrs returns a new slog.Handler with the additional attributes applied.
func InjectRootAttrs(h slog.Handler, cfg config.LoggerConfig) slog.Handler {
	return h.WithAttrs([]slog.Attr{ // Add root attributes
		slog.String(config.ENV_NAME, cfg.Env()),
		slog.String(config.VERSION_NAME, cfg.Version()),
		slog.String(config.SERVICE_NAME, cfg.Service()),
		slog.String(config.TENANT_NAME, cfg.Tenant()),
	})
}

// replaceAttributes modifies specific attributes of a slog entry.
//
// This function checks each attribute's key and applies transformations
// as necessary.These adjustments ensure that
// logs are standardized according to custom requirements before being
// handled.
// It returns back the modified attribute.
func replaceAttributes(groups []string, a slog.Attr) slog.Attr {
	if a.Key == "time" {
		a.Value = slog.AnyValue(time.Now().UTC())
	}

	if a.Key == "msg" {
		a.Key = config.LOG_MESSAGE_KEY
	}

	return a
}
